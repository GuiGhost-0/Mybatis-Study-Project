<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guighost.dao.StudentMapper">
    <!--按照结果嵌套处理-->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname
        from student s,teacher t
        where s.tid = t.id
    </select>
    <resultMap id="StudentTeacher2" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="Teacher">
            <result property="name" column="tname"/>
        </association>
    </resultMap>
    <!--==================================================================================-->
    <!--
    思路：
        1.查询所有的学生
        2.根据查询出来的学生的tid，查询对应的老师 ->子查询
    -->

    <select id="getStudent" resultMap="StudentTeacher">
        select  * from student
    </select>
    <resultMap id="StudentTeacher" type="Student">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <!--复杂的属性，需要单独处理
            对象：association
            集合：collection
        -->
        <association property="teacher" column="tid" javaType="Teacher" select="getTeacher"/>
        <!--
            association标签：表示为一个对象
                属性：
                property：Student实体类中的一个属性（teacher）
                column：Student实体类对应数据库表中的一个字段（tid）
                javaType：把该标签映射为Java中的一个对象，这里为Teacher对象
                select：为该对象赋值，这里使用的是一条查询语句：
                    <select id="getTeacher" resultType="Teacher">
                        select * from teacher where id = #{id}
                    </select>
        -->
    </resultMap>
    <select id="getTeacher" resultType="Teacher">
        select * from teacher where id = #{id}
    </select>
</mapper>